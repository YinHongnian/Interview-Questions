所有发生在浏览器、单页面应用、Web页面当中的安全问题则算是“前端安全问题”。
比如说，SQL注入漏洞发生在后端应用中，是后端安全问题，跨站脚本攻击（XSS）则是前端安全问题，因为它发生在用户的浏览器里。
8大前端安全问题:
  1. 老生常谈的XSS
    XSS是跨站脚本攻击（Cross-Site Scripting）的简称. XSS这类安全问题发生的本质原因在于，浏览器错误的将攻击者提供的用户输入数据当做JavaScript脚本给执行了。

  2. 警惕iframe带来的风险
    典型的例子是使用iframe在页面上添加第三方提供的广告、天气预报、社交分享插件等等。
    <iframe sandbox src="..."> ... </iframe>
    sandbox还忠实的实现了“Secure By Default”原则，也就是说，如果你只是添加上这个属性而保持属性值为空，那么浏览器将会对iframe实施史上最严厉的调控限制，基本上来讲就是除了允许显示静态资源以外，其他什么都做不了。比如不准提交表单、不准弹窗、不准执行脚本等等，连Origin都会被强制重新分配一个唯一的值，换句话讲就是iframe中的页面访问它自己的服务器都会被算作跨域请求。
    另外，sandbox也提供了丰富的配置参数，我们可以进行较为细粒度的控制。一些典型的参数如下：
        allow-forms：允许iframe中提交form表单
        allow-popups：允许iframe中弹出新的窗口或者标签页（例如，window.open()，showModalDialog()，target=”_blank”等等）
        allow-scripts：允许iframe中执行JavaScript
        allow-same-origin：允许iframe中的网页开启同源策略

  3. 别被点击劫持了
      有多种防御措施都可以防止页面遭到点击劫持攻击，例如Frame Breaking方案。一个推荐的防御方案是，使用X-Frame-Options：DENY这个HTTP Header来明确的告知浏览器，不要把当前HTTP响应中的内容在HTML Frame中显示出来。
  4. 错误的内容推断
      通过设置X-Content-Type-Options这个HTTP Header明确禁止浏览器去推断响应类型。
  5. 防火防盗防猪队友：不安全的第三方依赖包
  6. 用了HTTPS也可能掉坑里
  7. 本地存储数据泄露
  8. 缺失静态资源完整性校验